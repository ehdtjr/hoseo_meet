version: '3.8'

services:
  db:
    image: postgres:16
    restart: always
    volumes:
      - app-db-data:/var/lib/postgresql/data/pgdata
      - /etc/localtime:/etc/localtime:ro
    env_file:
      - backend/.env
    environment:
      - PGDATA=/var/lib/postgresql/data/pgdata
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD?Variable not set}
      - POSTGRES_USER=${POSTGRES_USER?Variable not set}
      - POSTGRES_DB=${POSTGRES_DB?Variable not set}
    ports:
      - "5432:5432"
    command:
      - "postgres"
      - "-c"
      - "shared_preload_libraries=pg_stat_statements"
    networks:
      - app_backend_net

  web:
    build:
      context: ./backend
      args:
        INSTALL_DEV: "true"
    command: ["uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "8000"]
    volumes:
      - ./backend:/app
    expose:
      - "8000"
    environment:
      - DOMAIN=${DOMAIN}
      - ENVIRONMENT=${ENVIRONMENT}
      - BACKEND_CORS_ORIGINS=${BACKEND_CORS_ORIGINS}
      - SECRET_KEY=${SECRET_KEY?Variable not set}
      - FIRST_SUPERUSER=${FIRST_SUPERUSER?Variable not set}
      - FIRST_SUPERUSER_PASSWORD=${FIRST_SUPERUSER_PASSWORD?Variable not set}
      - POSTGRES_SERVER=db
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER?Variable not set}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD?Variable not set}
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    networks:
      - app_backend_net

  redis:
    image: redis:latest
    restart: always
    ports:
      - "6379:6379"
    networks:
      - app_backend_net

  nginx:
    image: nginx:mainline-alpine
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "80:80"
    depends_on:
      - web
    networks:
      - app_backend_net

volumes:
  app-db-data:

networks:
  app_backend_net:
