services:
  db:
    image: postgres:16
    restart: always
    volumes:
      - app-db-data:/var/lib/postgresql/data/pgdata
      - /etc/localtime:/etc/localtime:ro  # 호스트 시스템의 시간을 공유

    env_file:
      - backend/.env
    environment:
      - PGDATA=/var/lib/postgresql/data/pgdata
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD?Variable not set}
      - POSTGRES_USER=${POSTGRES_USER?Variable not set}
      - POSTGRES_DB=${POSTGRES_DB?Variable not set}
    ports:
      - "5432:5432"

  test-db:
    image: postgres:16
    restart: always
    environment:
      - POSTGRES_PASSWORD=test_password
      - POSTGRES_USER=test_user
      - POSTGRES_DB=test_db
    ports:
      - "5433:5432"

  redis:
    image: redis:latest
    restart: always
    ports:
      - "6379:6379"

  web:
    build:
      context: ./backend
      args:
        INSTALL_DEV: "true"
    command: [ "uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "8000" ]
    volumes:
      - ./backend:/app
    ports:
      - "8000:8000"
    depends_on:
      - db
      - redis
    env_file:
      - backend/.env
    environment:
      - DOMAIN=${DOMAIN}
      - ENVIRONMENT=${ENVIRONMENT}
      - BACKEND_CORS_ORIGINS=${BACKEND_CORS_ORIGINS}
      - SECRET_KEY=${SECRET_KEY?Variable not set}
      - FIRST_SUPERUSER=${FIRST_SUPERUSER?Variable not set}
      - FIRST_SUPERUSER_PASSWORD=${FIRST_SUPERUSER_PASSWORD?Variable not set}
      - SMTP_HOST=${SMTP_HOST}
      - SMTP_USER=${SMTP_USER}
      - SMTP_PASSWORD=${SMTP_PASSWORD}
      - POSTGRES_SERVER=db
      - POSTGRES_PORT=${POSTGRES_PORT}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER?Variable not set}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD?Variable not set}
      - REDIS_HOST=redis
      - REDIS_PORT=6379

  # Celery Worker 서비스
  celery-worker:
    build:
      context: ./backend
    command: [ "celery", "-A", "app.celery.worker", "worker",
               "--loglevel=info"
    ]
    # Celery Worker 실행
    volumes:
      - ./backend:/app
    depends_on:
      - redis
      - db
    env_file:
      - backend/.env
    environment:
      - POSTGRES_SERVER=db
      - POSTGRES_PORT=${POSTGRES_PORT}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER?Variable not set}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD?Variable not set}
      - REDIS_HOST=redis
      - REDIS_PORT=6379

  # Celery Beat 서비스
  celery-beat:
    build:
      context: ./backend
    command: [ "celery", "-A", "app.celery.worker", "beat",
               "--loglevel=info" ]
    volumes:
      - ./backend:/app
    depends_on:
      - redis
      - db
    env_file:
      - backend/.env
    environment:
      - POSTGRES_SERVER=db
      - POSTGRES_PORT=${POSTGRES_PORT}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER?Variable not set}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD?Variable not set}
      - REDIS_HOST=redis
      - REDIS_PORT=6379

volumes:
  app-db-data:
